diff --git a/baby-gru/public/CootWorker.ts b/baby-gru/public/CootWorker.ts
index 47de8692..1478a90d 100644
--- a/baby-gru/public/CootWorker.ts
+++ b/baby-gru/public/CootWorker.ts
@@ -1164,10 +1164,25 @@ const doCootCommand = (messageData: {
 
     const { returnType, command, commandArgs, messageId, myTimeStamp, message } = messageData
 
+
     try {
 
         let cootResult
         switch (command) {
+            case 'shim_set_colour_map_for_map_coloured_by_other_map':
+                const theVector = new cootModule.vector_pair_double_vector_double()
+                console.log(commandArgs)
+                commandArgs.forEach((cp) => {
+                    const thePair: libcootApi.DoublePairDoubleJS = {first:0,second:null}
+                    thePair.first = cp[0]
+                    thePair.second = new cootModule.VectorDouble()
+                    thePair.second.push_back(cp[1][0])
+                    thePair.second.push_back(cp[1][1])
+                    thePair.second.push_back(cp[1][2])
+                    theVector.push_back(thePair)
+                })
+                cootResult = molecules_container.set_colour_map_for_map_coloured_by_other_map(theVector)
+                break
             case 'shim_generate_assembly':
                 cootResult = generate_assembly(...commandArgs as [string, string, string])
                 break
diff --git a/baby-gru/src/components/navbar-menus/MoorhenFileMenu.tsx b/baby-gru/src/components/navbar-menus/MoorhenFileMenu.tsx
index 907e751d..f74e8895 100644
--- a/baby-gru/src/components/navbar-menus/MoorhenFileMenu.tsx
+++ b/baby-gru/src/components/navbar-menus/MoorhenFileMenu.tsx
@@ -186,6 +186,26 @@ export const MoorhenFileMenu = (props: MoorhenNavBarExtendedControlsInterface) =
         return props.timeCapsuleRef.current.createBackup(keyString, sessionString)
     }
 
+    const handleSetColourRamp = async () => {
+        const color_points = [
+            [0.00, [0, 102, 0]],
+            [0.10, [0, 153, 0]],
+            [0.25, [51, 204, 0]],
+            [0.40, [153, 153, 0]],
+            [0.55, [204, 153, 0]],
+            [0.70, [204, 102, 0]],
+            [0.85, [153, 51, 0]],
+            [0.92, [102, 0, 0]],
+            [1.00, [230, 230, 230]],
+        ]
+        const response = await props.commandCentre.current.cootCommand({
+            command: 'shim_set_colour_map_for_map_coloured_by_other_map',
+            commandArgs: color_points,
+            returnType: "status"
+        }, false)
+        console.log(response.data.result)
+    }
+
     const handleRecording = useCallback( () => {
         if (!props.videoRecorderRef.current) {
             console.warn('Attempted to record screen before webGL is initated...')
@@ -268,6 +288,10 @@ export const MoorhenFileMenu = (props: MoorhenNavBarExtendedControlsInterface) =
                         Record a video
                     </MenuItem>
 
+                    <MenuItem id='colour-menu-item' onClick={handleSetColourRamp}>
+                        Add a colour ramp
+                    </MenuItem>
+
                     {(!props.disableFileUploads && devMode && false) &&
                     <MenuItem id='load-mrbump-menu-item' onClick={handleLoadMrBump}>
                     MrBump results...
diff --git a/baby-gru/src/types/libcoot.d.ts b/baby-gru/src/types/libcoot.d.ts
index f75ac760..d36491fe 100644
--- a/baby-gru/src/types/libcoot.d.ts
+++ b/baby-gru/src/types/libcoot.d.ts
@@ -562,10 +562,17 @@ export namespace libcootApi {
         MapIntFloat3: { new(): emscriptem.map<[number, number, number], number>};
         MapIntFloat4: { new(): emscriptem.map<[number, number, number, number], number>};
         VectorStringUInt_pair: { new(): emscriptem.vector<{ first: string, second: number }>};
+        vector_pair_double_vector_double: { new(): emscriptem.vector<{ first: double, second: emscriptem.vector<double> }>};
+        VectorDouble: { new(): emscriptem.vector<double>};
         is64bit(): boolean;
     }
+    interface DoublePairDoubleJS {
+      first: number;
+      second: any;
+    }
     interface MoleculesContainerJS {
         delete(): void;
+        set_colour_map_for_map_coloured_by_other_map(arg0: any): void;
         set_refinement_is_verbose(arg0: boolean): void;
         set_use_gemmi(arg0: boolean): void;
         get_use_gemmi(): boolean;
diff --git a/wasm_src/moorhen-wrappers.cc b/wasm_src/moorhen-wrappers.cc
index 72588279..7e589992 100644
--- a/wasm_src/moorhen-wrappers.cc
+++ b/wasm_src/moorhen-wrappers.cc
@@ -1669,6 +1669,7 @@ EMSCRIPTEN_BINDINGS(my_module) {
     ;
     class_<molecules_container_t>("molecules_container_t")
     .constructor<bool>()
+    .function("set_colour_map_for_map_coloured_by_other_map",&molecules_container_t::set_colour_map_for_map_coloured_by_other_map)
     .function("get_mutation_info",&molecules_container_t::get_mutation_info)
     .function("get_ligand_validation_vs_dictionary",&molecules_container_t::get_ligand_validation_vs_dictionary)
     .function("get_validation_vs_dictionary_for_selection",&molecules_container_t::get_validation_vs_dictionary_for_selection)
@@ -2268,6 +2269,10 @@ EMSCRIPTEN_BINDINGS(my_module) {
         .field("first",&std::pair<bool, float>::first)
         .field("second",&std::pair<bool, float>::second)
     ;
+    value_object<std::pair<double, std::vector<double> > >("pair_double_vector_double")
+        .field("first",&std::pair<double, std::vector<double>>::first)
+        .field("second",&std::pair<double, std::vector<double>>::second)
+    ;
     value_object<std::pair<clipper::Coord_orth, float>>("pair_clipper_coord_orth_float")
         .field("first",&std::pair<clipper::Coord_orth, float>::first)
         .field("second",&std::pair<clipper::Coord_orth, float>::second)
@@ -2365,6 +2370,7 @@ EMSCRIPTEN_BINDINGS(my_module) {
     ;
 
     register_vector<moorhen::helix_t>("vector_helix_t");
+    register_vector<std::pair<double, std::vector<double>>>("vector_pair_double_vector_double");
 
     value_object<moorhen_hbond>("moorhen_hbond")
       .field("hb_hydrogen",&moorhen_hbond::hb_hydrogen)
